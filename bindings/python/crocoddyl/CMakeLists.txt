SET(${PROJECT_NAME}_PYTHON_BINDINGS_SOURCES
  crocoddyl.cpp
  )

SET(${PROJECT_NAME}_PYTHON_BINDINGS_FILES
  __init__.py
  )


ADD_LIBRARY(${PROJECT_NAME}_pywrap SHARED ${${PROJECT_NAME}_PYTHON_BINDINGS_SOURCES})
PKG_CONFIG_USE_DEPENDENCY(${PROJECT_NAME}_pywrap eigen3)
PKG_CONFIG_USE_DEPENDENCY(${PROJECT_NAME}_pywrap eigenpy)
PKG_CONFIG_USE_DEPENDENCY(${PROJECT_NAME}_pywrap pinocchio)

TARGET_LINK_LIBRARIES(${PROJECT_NAME}_pywrap ${PROJECT_NAME})
TARGET_LINK_BOOST_PYTHON(${PROJECT_NAME}_pywrap)
# BOOST_PYTHON_MEMBER_FUNCTION_OVERLOADS spews conversion warnings from int to long unsigned int.
# Unfortunately, using literals does not work in a macro. As such, this turns them off for the entire wrapper:
TARGET_COMPILE_OPTIONS(${PROJECT_NAME}_pywrap PRIVATE "-Wno-conversion")

INSTALL(TARGETS ${PROJECT_NAME}_pywrap DESTINATION ${PYTHON_SITELIB}/${PROJECT_NAME})


FOREACH(python ${${PROJECT_NAME}_PYTHON_BINDINGS_FILES})
  PYTHON_BUILD(. ${python})
  INSTALL(FILES
    "${${PROJECT_NAME}_SOURCE_DIR}/bindings/python/crocoddyl/${python}"
    DESTINATION ${PYTHON_SITELIB}/${PROJECT_NAME})
ENDFOREACH(python ${${PROJECT_NAME}_PYTHON_BINDINGS_FILES})


SET(${PROJECT_NAME}_BINDINGS_UTILS_PYTHON_FILES
  __init__.py
  biped.py
  quadruped.py
  )

FOREACH(python ${${PROJECT_NAME}_BINDINGS_UTILS_PYTHON_FILES})
  PYTHON_BUILD(utils ${python})
ENDFOREACH(python ${${PROJECT_NAME}_BINDINGS_UTILS_PYTHON_FILES})
